OOP (Object Oriented Programming)
  - faster and easier to execute
  - provides a clear structure for the programs
  - makes the code easier to maintain, modify and debug

4 Pillars of OOP
  1. Inheritance - a class inherits the methods and properties of another class (allows developer to reuse code and easily add new features)
  2. Polymorphism - create multiple methods with the same name but with different implementations (makes it easier to create flexible systems that are easier to understand and maintain)
                   - is the ability of an object to take on many forms.
             Method overloading - used to define multiple methods witht he same name but with different parameters.
            Method overriding - the super class and the sub class have the same methods including the parameters
  3. Encapsulation - the process of wrapping data and related functions into a single unit (object); encapsulation is implemented using access modifiers which control the visibility of variables and methods within a class
              Access Modifiers
                  a. Public - public variable and methods can be accessed from anywhere, including ourside the class (whole project)
                  b. Private - private variable and moethods can be accessed within the class they are defined in (class level)
                  c. Protected - protected variables and methods can be accessed within the same class and subclasses (package and subclass)
                  d. Default - declared without any access modifier (package level)
  4. Abstraction - is the process of hiding unnecessary details of an object's internal structure

Java try and catch
  try - allows you to define a block of code to be tested for errors while it is being executed
  catch - allows you to define a block of code to be executed if an error occurs in the try block
  finally - lets you execute a code after try catch regardless of the result







